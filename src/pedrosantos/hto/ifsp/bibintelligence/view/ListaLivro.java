/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package pedrosantos.hto.ifsp.bibintelligence.view;

import pedrosantos.hto.ifsp.bibintelligence.controller.Conexao;
import java.awt.Container;
import java.awt.FlowLayout;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import pedrosantos.hto.ifsp.bibintelligence.controller.BibIntelligence;

/**
 *
 * @author lndosnw
 */
public class ListaLivro extends javax.swing.JFrame {

    /**
     * Creates new form ListaLivro
     */
    
    int ativa=0;
    DefaultTableModel modelo;
    
    private ListaLivro() {
        initComponents();
        modelo = (DefaultTableModel) tblLivros.getModel();
    }
    
    private static ListaLivro instancia;
    public static ListaLivro getInstancia(){
        if (instancia == null){
            instancia = new ListaLivro();
        }
        return instancia;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        Livros = new javax.swing.JPanel();
        jspLivros = new javax.swing.JScrollPane();
        tblLivros = new javax.swing.JTable();
        botoes = new javax.swing.JPanel();
        btNovo = new javax.swing.JButton();
        btEditar = new javax.swing.JButton();
        btFechar = new javax.swing.JButton();
        btAtivaDesativa = new javax.swing.JButton();
        btAtivadosDesativados = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Livros");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });

        tblLivros.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "idLivro", "tombo", "isbn", "nome", "edicao", "editora", "autor", "ano", "paginas", "estado", "descricao", "emprestado", "desativado"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblLivros.setColumnSelectionAllowed(true);

        org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, Livros, org.jdesktop.beansbinding.ObjectProperty.create(), tblLivros, org.jdesktop.beansbinding.BeanProperty.create("elements"));
        bindingGroup.addBinding(binding);
        binding.bind();
        jspLivros.setViewportView(tblLivros);
        tblLivros.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);

        javax.swing.GroupLayout LivrosLayout = new javax.swing.GroupLayout(Livros);
        Livros.setLayout(LivrosLayout);
        LivrosLayout.setHorizontalGroup(
            LivrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jspLivros, javax.swing.GroupLayout.DEFAULT_SIZE, 532, Short.MAX_VALUE)
        );
        LivrosLayout.setVerticalGroup(
            LivrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jspLivros, javax.swing.GroupLayout.DEFAULT_SIZE, 380, Short.MAX_VALUE)
        );

        btNovo.setText("Novo");
        btNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btNovoActionPerformed(evt);
            }
        });

        btEditar.setText("Editar");
        btEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btEditarActionPerformed(evt);
            }
        });

        btFechar.setText("Fechar");
        btFechar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btFecharActionPerformed(evt);
            }
        });

        btAtivaDesativa.setText("Desativar");
        btAtivaDesativa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAtivaDesativaActionPerformed(evt);
            }
        });

        btAtivadosDesativados.setText("Exibir Desativados");
        btAtivadosDesativados.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAtivadosDesativadosActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout botoesLayout = new javax.swing.GroupLayout(botoes);
        botoes.setLayout(botoesLayout);
        botoesLayout.setHorizontalGroup(
            botoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(botoesLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(btNovo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btEditar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btAtivadosDesativados)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btAtivaDesativa)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btFechar)
                .addContainerGap(31, Short.MAX_VALUE))
        );
        botoesLayout.setVerticalGroup(
            botoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(botoesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(botoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btNovo)
                    .addComponent(btEditar)
                    .addComponent(btAtivadosDesativados)
                    .addComponent(btAtivaDesativa)
                    .addComponent(btFechar))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Livros, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addComponent(botoes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Livros, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(botoes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        bindingGroup.bind();

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btNovoActionPerformed
        // TODO add your handling code here:
        CadLivro cadlivro = CadLivro.getInstancia();
        cadlivro.edit=0;
        cadlivro.setVisible(true);
    }//GEN-LAST:event_btNovoActionPerformed

    private void btEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btEditarActionPerformed
        // TODO add your handling code here:
        CadLivro cadlivro = CadLivro.getInstancia();
        cadlivro.edit=1;
        if(tblLivros.getSelectedRow() != -1){
            cadlivro.tombo = (String) modelo.getValueAt(tblLivros.getSelectedRow(), 1);
            cadlivro.isbn = (Long) modelo.getValueAt(tblLivros.getSelectedRow(), 2);
            cadlivro.nome = (String) modelo.getValueAt(tblLivros.getSelectedRow(), 3);
            cadlivro.edicao = (int) modelo.getValueAt(tblLivros.getSelectedRow(), 4);
            cadlivro.editora = (int) modelo.getValueAt(tblLivros.getSelectedRow(), 5);
            cadlivro.autor = (int) modelo.getValueAt(tblLivros.getSelectedRow(), 6);
            cadlivro.ano = (int) modelo.getValueAt(tblLivros.getSelectedRow(), 7);
            cadlivro.paginas = (int) modelo.getValueAt(tblLivros.getSelectedRow(), 8);
            cadlivro.estado = (String) modelo.getValueAt(tblLivros.getSelectedRow(), 9);
            cadlivro.descricao = (String) modelo.getValueAt(tblLivros.getSelectedRow(), 10);
            cadlivro.idLivro = BibIntelligence.VerificaID("SELECT idLivro from livros where tombo= \""+cadlivro.tombo+"\"", "idLivro",2);
            //combobox autor
            
            cadlivro.setVisible(true);
            
            
        }
        else{
            JOptionPane.showMessageDialog(null, "Selecione Um Usuário Para Editar", "Erro !", JOptionPane.ERROR_MESSAGE);
        }
        
    }//GEN-LAST:event_btEditarActionPerformed

    private void btFecharActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btFecharActionPerformed
        // TODO add your handling code here:
        //setVisible(false);
        this.dispose();
    }//GEN-LAST:event_btFecharActionPerformed

    private void btAtivaDesativaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAtivaDesativaActionPerformed
        // TODO add your handling code here:
        if(ativa==0){
            ativa=1;
            BibIntelligence.AtvDestvLivro(ativa, (int) tblLivros.getValueAt(tblLivros.getSelectedRow(), 0));
            formWindowActivated(null);
            corrigeBotoes();
        }else{
            ativa=0;
            BibIntelligence.AtvDestvLivro(ativa, (int) tblLivros.getValueAt(tblLivros.getSelectedRow(), 0));
            formWindowActivated(null);
            corrigeBotoes();
        }
    }//GEN-LAST:event_btAtivaDesativaActionPerformed

    private void btAtivadosDesativadosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAtivadosDesativadosActionPerformed
        // TODO add your handling code here:
        if(ativa==0){
            ativa=1;
            formWindowActivated(null);
            corrigeBotoes();
        }else{
            ativa=0;
            formWindowActivated(null);
            corrigeBotoes();
        }
    }//GEN-LAST:event_btAtivadosDesativadosActionPerformed

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        // TODO add your handling code here:
        modelo.setNumRows(0);

        if(ativa==0){
            try{
                    String SQL = "call listaLivrosAtivos";
                    while(Conexao.getResultSet(SQL).next()){
                        modelo.addRow(new Object[]{Conexao.getRsInt("idLivro"), Conexao.getRsString("tombo"), Conexao.getRsLong("isbn"), Conexao.getRsString("nome"), Conexao.getRsInt("edicao"), Conexao.getRsInt("editora"), Conexao.getRsInt("autor"), Conexao.getRsInt("ano"), Conexao.getRsInt("paginas"), Conexao.getRsString("estado"), Conexao.getRsString("descricao"), Conexao.getRsBoolean("emprestado"), Conexao.getRsBoolean("desativado")});
                    }
                }catch(SQLException ex){
                           System.out.println("SQLException: " + ex.getMessage());
                           System.out.println("SQLState: " + ex.getSQLState());
                           System.out.println("VendorError: " + ex.getErrorCode());
                  }
                  catch(Exception e){
                        System.out.println("Problemas ao tentar conectar com o banco de dados");	
                }
                finally{
                    try{
                        Conexao.finalizaUso(); //finaliza o uso da conexao
                    }catch(SQLException onConClose){
                    //System.out.println("Houve erro no fechamento da conexão");
                    JOptionPane.showMessageDialog(null,"Erro na conexão, com o banco de dados!","Erro Ao Logar",JOptionPane.WARNING_MESSAGE);
                    onConClose.printStackTrace();
                    }    
                }
        }else{
            try{
                    String SQL = "call listaLivrosDesativados";
                    while(Conexao.getResultSet(SQL).next()){
                        modelo.addRow(new Object[]{Conexao.getRsInt("idLivro"), Conexao.getRsString("tombo"), Conexao.getRsLong("isbn"), Conexao.getRsString("nome"), Conexao.getRsInt("edicao"), Conexao.getRsInt("editora"), Conexao.getRsInt("autor"), Conexao.getRsInt("ano"), Conexao.getRsInt("paginas"), Conexao.getRsString("estado"), Conexao.getRsString("descricao"), Conexao.getRsBoolean("emprestado"), Conexao.getRsBoolean("desativado")});
                    }
                }catch(SQLException ex){
                           System.out.println("SQLException: " + ex.getMessage());
                           System.out.println("SQLState: " + ex.getSQLState());
                           System.out.println("VendorError: " + ex.getErrorCode());
                  }
                  catch(Exception e){
                        System.out.println("Problemas ao tentar conectar com o banco de dados");	
                }
                finally{
                    try{
                        Conexao.finalizaUso(); //finaliza o uso da conexao
                    }catch(SQLException onConClose){
                    //System.out.println("Houve erro no fechamento da conexão");
                    JOptionPane.showMessageDialog(null,"Erro na conexão, com o banco de dados!","Erro Ao Logar",JOptionPane.WARNING_MESSAGE);
                    onConClose.printStackTrace();
                    }    
                }
        }
    }//GEN-LAST:event_formWindowActivated

    /**
     * @param args the command line arguments
     */
    
    
    public Boolean BlDsbItem(int op,int permissao){
        Boolean resultado = false;
        if(op==0){
            switch(permissao){
                case 1: btNovo.setEnabled(false); resultado=true; break;
                case 2: btEditar.setEnabled(false); resultado=true; break;
                case 3: btAtivaDesativa.setEnabled(false); resultado=true; break;
                default: resultado=false; break;
            }    
        }else if(op==1){
            switch(permissao){
                case 1: btNovo.setEnabled(true); resultado=true; break;
                case 2: btEditar.setEnabled(true); resultado=true; break;
                case 3: btAtivaDesativa.setEnabled(true); resultado=true; break;
                default: resultado=false; break;
            }
        }
        else{
            resultado=false;
        }
        return resultado;
    }
    
    private void corrigeBotoes(){
        if(ativa==0){
            btAtivaDesativa.setText("Desativar");
            btAtivadosDesativados.setText("Exibir Desativados");
        }else{
            btAtivaDesativa.setText("Reativar");
            btAtivadosDesativados.setText("Exibir Ativos");
        }
    }
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ListaLivro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ListaLivro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ListaLivro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ListaLivro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ListaLivro().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Livros;
    private javax.swing.JPanel botoes;
    private javax.swing.JButton btAtivaDesativa;
    private javax.swing.JButton btAtivadosDesativados;
    private javax.swing.JButton btEditar;
    private javax.swing.JButton btFechar;
    private javax.swing.JButton btNovo;
    private javax.swing.JScrollPane jspLivros;
    private javax.swing.JTable tblLivros;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables
}
